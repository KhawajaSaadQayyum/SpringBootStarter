 fetchEmployees() {
      axios.get('http://localhost:8080/employees/get')
        .then(res => {
          this.employees = res.data;
        })
        .catch(error => {
          console.error('Error fetching employees:');
        });
    },
    addEmployee() {
      const addForm = {
        firstName: this.addForm.firstName,
        lastName: this.addForm.lastName,
        email: this.addForm.email,
        dateOfBirth:this.addForm.dateOfBirth,
        nationality:this.addForm.nationality,
        companyName:this.addForm.companyName,
        passportIssueDate:this.addForm.passportIssueDate,
        passportExpiryDate:this.addForm.passportExpiryDate,
      };

      axios.post('http://localhost:8080/employees/add', addForm)
        .then(response => {
          ElMessage.success('Record added successfully.')
          this.addFormDialog = false
          this.fetchEmployees();
          this.addForm.firstName="",
          this.addForm.lastName="",
          this.addForm.email=""
        })
        .catch(error => {
          ElMessage.warning('Record not inserted.')

          this.addFormDialog = false
        });

    },
    

    deleteEmployee(id) {
      axios.delete(`http://localhost:8080/employees/delete/${id}`).then(res => {
        ElMessage.success("Deleted Successfully")
        this.fetchEmployees();
      }).catch(err => {
        ElMessage.error("Record Not Deleted something went wrong")
        this.fetchEmployees();
      })
    },
    editEmployee() {

      const editEmployee = {
        firstName: this.editEmployeeForm.firstName,
        lastName: this.editEmployeeForm.lastName,
        email: this.editEmployeeForm.email,
        dateOfBirth :this.editEmployeeForm.dateOfBirth,
        nationality : this.editEmployeeForm.nationality,
        companyName: this.editEmployeeForm.companyName,
        passportIssueDate: this.editEmployeeForm.passportIssueDate,
        passportExpiryDate : this.editEmployeeForm.passportExpiryDate
      };
      this.editFormDialog = false;

      axios.put(`http://localhost:8080/employees/update/${this.editEmployeeForm.id}`, editEmployee)
        .then(response => {
          ElMessage.success('Record edited successfully.')
          this.fetchEmployees();
          this.editFormDialog = false;
          this.editEmployeeForm.firstName=""
          this.editEmployeeForm.lastName=""
          this.editEmployeeForm.email=""
          this.editEmployeeForm.dateOfBirth="",
          this.editEmployeeForm.nationality="",
          this.editEmployeeForm.companyName="",
          this.editEmployeeForm.passportIssueDate=""
          this.editEmployeeForm.passportExpiryDate=""
         

        })
        .catch(error => {
          ElMessage.warning('Record not edit successfully.')
          this.editFormDialog = false;

        });

    },